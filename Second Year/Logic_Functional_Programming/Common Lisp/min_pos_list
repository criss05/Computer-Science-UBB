;Build a list with the positions of the minimum number from a linear list.
;Ex: (1 2 0 a 4 0 b 1 7) => (3, 6)

;minEl(l1l2..ln,min)=l1, n=1
;                  min(l1, minEl(l2..ln)),l1-number
;                  getMin(l2..ln), otherwise


;findpos(l1l2..ln, el, pos)=(), n=0
;                           pos U findpos(l2..ln, el, pos+1), l1=el
;                           findpos(l2..ln, el, pos+1), otherwise

;main(l1l2..ln)= findpos(l1..ln, minEl(l1..ln), 1)


(defun minEl(l)
  (cond
       ((null (cdr l)) (car l))
       ((numberp (car l)) (min (car l)(minEl (cdr l))))
       (t (minEl(cdr l)))
   )
)

(defun findpos(l el pos)
  (cond 
       ((null l) ())
       ((equal (car l) el) (cons pos (findpos (cdr l) el (+ pos 1)))) ; equalis general, the compar elements can be other atoms than number
       (t  (findpos (cdr l) el (+ pos 1)))
   )
)

(defun main (l) (findpos l 1 (getmin l)))
